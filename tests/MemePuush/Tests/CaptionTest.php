<?php
namespace MemePuush\Tests;


use MemePuush\Caption;
use MemePuush\Image;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-02-07 at 00:11:07.
 */
class CaptionTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Image
     */
    protected $mockImage;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->mockImage = $this->getMockBuilder( 'MemePuush\Image' )->disableOriginalConstructor()->getMock();
    }

    /**
     * @covers MemePuush\Caption::isEmpty
     */
    public function testIsEmpty()
    {
        $object = new Caption( $this->mockImage, '' );
        $this->assertTrue( $object->isEmpty() );

        $object = new Caption( $this->mockImage, 'test' );
        $this->assertFalse( $object->isEmpty() );
    }

    /**
     * @covers MemePuush\Caption::getLocation
     */
    public function testGetLocation()
    {
        $object = new Caption( $this->mockImage, '', 'top' );
        $this->assertEquals( 'top', $object->getLocation() );

        $object = new Caption( $this->mockImage, 'test', 'bottom' );
        $this->assertEquals( 'bottom', $object->getLocation() );
    }

    /**
     * @covers MemePuush\Caption::getText
     */
    public function testGetText()
    {
        $object = new Caption( $this->mockImage, '' );
        $this->assertEquals( '', $object->getText() );

        $object = new Caption( $this->mockImage, 'test' );
        $this->assertEquals( 'TEST', $object->getText() );

        $object = new Caption( $this->mockImage, 'mix OF cases and 28271!' );
        $this->assertEquals( 'MIX OF CASES AND 28271!', $object->getText() );
    }

    /**
     * @covers MemePuush\Caption::getStringLength
     */
    public function testGetStringLength()
    {
        $object = new Caption( $this->mockImage, '' );
        $this->assertEquals( 0, $object->getStringLength() );

        $object = new Caption( $this->mockImage, 'test' );
        $this->assertEquals( 4, $object->getStringLength() );

        $object = new Caption( $this->mockImage, 'mix OF cases and 28271!' );
        $this->assertEquals( 23, $object->getStringLength() );
    }

    /**
     * @covers MemePuush\Caption::setFontPath
     * @covers MemePuush\Caption::getFontPath
     */
    public function testSetGetFontPath()
    {
        $object = new Caption( $this->mockImage, '' );
        $object->setFontPath( '/path/to/nowhere' );
        $this->assertEquals( '/path/to/nowhere', $object->getFontPath() );
    }

    /**
     * @covers MemePuush\Caption::getFontSize
     */
    public function testGetFontSize()
    {
        $object = new Caption( $this->mockImage, '' );
        $this->assertEquals( 0, $object->getFontSize() );
    }

    /**
     * @covers MemePuush\Caption::getBoundingBox
     */
    public function testGetBoundingBoxDefaultTop()
    {
        $object = new Caption( $this->mockImage, 'test' );

        //validate the default with no image dimensions
        $expected = array(
            'x1'     => 2,
            'x2'     => -2,
            'x'      => 0,
            'width'  => 0,
            'y1'     => 2,
            'y2'     => -2,
            'y'      => 10,
            'height' => 0
        );

        $this->assertEquals( $expected, $object->getBoundingBox() );
    }

    /**
     * @covers MemePuush\Caption::getBoundingBox
     */
    public function testGetBoundingBoxDefaultBottom()
    {
        $object = new Caption( $this->mockImage, 'test', 'bottom' );

        //validate the default with no image dimensions
        $expected = array(
            'x1'     => 2,
            'x2'     => -2,
            'x'      => 0,
            'width'  => 0,
            'y1'     => -2,
            'y2'     => -2,
            'y'      => -2,
            'height' => 0
        );

        $this->assertEquals( $expected, $object->getBoundingBox() );
    }

    /**
     * @covers MemePuush\Caption::getDrawLayer
     * @todo   Implement testGetDrawLayer().
     */
    public function testGetDrawLayer()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MemePuush\Caption::annotateImage
     * @todo   Implement testAnnotateImage().
     */
    public function testAnnotateImage()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }
}
