<?php
namespace MemePuush\Tests;


use MemePuush\Image;
use MemePuush\Caption;
use Imagick;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-02-07 at 00:11:24.
 *
 * @covers MemePuush\Image
 */
class ImageTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Image
     */
    protected $object;

    /**
     * @var Imagick
     */
    protected $image;

    /**
     * @covers MemePuush\Image::__construct
     */
    protected function setUp()
    {
        $this->object = new Image();

        $this->image = $this->getMock( 'Imagick', array( 'getImageGeometry' ), array() );
        $this->image->expects( $this->any() )->method( 'getImageGeometry' )->will( $this->returnValue( array( 'width' => 480, 'height' => 640 ) ) );

        $this->object->setImage( $this->image );
    }

    /**
     * @covers MemePuush\Image::__construct
     * @expectedException \Exception
     */
    public function testInvalidImage()
    {
        $image = $this->getMock( 'Imagick', array( 'getImageGeometry', 'getImageSignature' ) );
        $image->expects( $this->any() )->method( 'getImageGeometry' )->will( $this->throwException( new \Exception() ) );

        $object = new Image( 'not a real url' );

        $object->setImage( $image );
        $object->setBottomCaption( 'test' );
        $object->setTopCaption( 'test' );

        $object->output();
    }

    /**
     * @covers MemePuush\Image::setImage
     */
    public function testSetImage()
    {
        $image = $this->getMock( 'Imagick', array( 'getImageGeometry' ), array() );
        $this->object->setImage( $image );

        $this->assertEquals( $image, $this->object->getImage() );
    }

    /**
     * @covers MemePuush\Image::getImage
     */
    public function testGetImage()
    {
        $this->assertEquals( $this->image, $this->object->getImage() );
    }

    /**
     * @covers MemePuush\Image::getHeight
     * @covers MemePuush\Image::getImageProperties
     */
    public function testGetHeight()
    {
        $this->assertEquals( 640, $this->object->getHeight() );
    }

    /**
     * @covers MemePuush\Image::getWidth
     * @covers MemePuush\Image::getImageProperties
     */
    public function testGetWidth()
    {
        $this->assertEquals( 480, $this->object->getWidth() );
    }

    /**
     * @covers MemePuush\Image::setTopCaption
     */
    public function testSetTopCaption()
    {
        $this->object->setTopCaption( 'top caption' );

        $caption = new Caption( $this->object, 'top caption', 'top' );
        $this->assertEquals( $caption, $this->object->getTopCaption() );
    }

    /**
     * @covers MemePuush\Image::getTopCaption
     */
    public function testGetTopCaption()
    {
        $this->assertNull( $this->object->getTopCaption() );
    }

    /**
     * @covers MemePuush\Image::setBottomCaption
     */
    public function testSetBottomCaption()
    {
        $this->object->setBottomCaption( 'bottom caption' );

        $caption = new Caption( $this->object, 'bottom caption', 'bottom' );
        $this->assertEquals( $caption, $this->object->getBottomCaption() );
    }

    /**
     * @covers MemePuush\Image::getBottomCaption
     */
    public function testGetBottomCaption()
    {
        $this->assertNull( $this->object->getBottomCaption() );
    }

    /**
     * @covers MemePuush\Image::setOutputFormat
     * @covers MemePuush\Image::getOutputFormat
     * @covers MemePuush\Image::getApiKey
     */
    public function testSetOutputFormat()
    {
        $this->object->setOutputFormat( 'puush', '2347834' );

        $this->assertEquals( 'puush', $this->object->getOutputFormat() );
        $this->assertEquals( '2347834', $this->object->getApiKey() );
    }

    /**
     * @covers MemePuush\Image::getOutputFormat
     */
    public function testGetOutputFormat()
    {
        $this->assertNull( $this->object->getOutputFormat() );
    }

    /**
     * @covers MemePuush\Image::getApiKey
     */
    public function testGetApiKey()
    {
        $this->assertNull( $this->object->getApiKey() );
    }

    /**
     * @covers MemePuush\Image::output
     * @todo   Implement testOutput().
     */
    public function testOutput()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers MemePuush\Image::output
     * @covers MemePuush\Image::getOutputFilename
     */
    public function testOutputFilename()
    {
        $imagick = $this->getMock( 'Imagick', array( 'getImageGeometry', 'getImageSignature', 'setImageFormat', 'setCompression', 'setCompressionQuality', 'writeImage', 'queryFontMetrics', 'annotateImage' ), array() );
        $imagick->expects( $this->any() )->method( 'getImageGeometry' )->will( $this->returnValue( array( 'width' => 283, 'height' => 445 ) ) );

        $this->object->setImage( $imagick );

        $draw = $this->getMock(
            'ImagickDraw',
            array(
                 'setFont', 'setFontSize', 'setFontWeight',
                 'setStrokeColor', 'setStrokeWidth', 'setStrokeAntialias', 'setStrokeAlpha', 'setFillAlpha',
                 'setTextAntialias', 'setTextAlignment', 'setTextKerning', 'setGravity', 'setFillColor',
                 'rectangle'
            ),
            array()
        );

        $this->object->setTopCaption( 'something' );
        $this->object->getTopCaption()->setDraw( $draw );
        $this->object->getTopCaption()->setGravity( 2 );
        $this->object->setBottomCaption( '' );
        $this->object->getBottomCaption()->setDraw( $draw );
        $this->object->getBottomCaption()->setGravity( 2 );

        $this->assertEquals( '0da702af.jpg', $this->object->getOutputFilename() );
    }
}
